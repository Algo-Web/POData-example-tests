<?php

use Illuminate\Foundation\Testing\DatabaseTransactions;

class CustomerFilterTest extends TestCase
{
	// tests Logical Operators eq/Equal
    public function testfilterEQGood()
    {

        $this->visit('odata.svc/customer?$filter=name%20eq%20%27Bilbo%20Baggins%27')
        ->see('odata.svc/customer(id=1)</id>')
        ->see('<title type="text">customer</title>')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('xml:base="')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee("Whoops");
    }
    // tests Logical Operators ne/Not equal
    public function testfilterNEGood()
    {
        $this->visit('odata.svc/customer?$filter=name%20ne%20%27Bilbo%20Baggins%27')
        ->dontSee('odata.svc/customer(id=1)</id>')
        ->DontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->DontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">2</d:id>')
        ->see('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->see('<d:id m:type="Edm.Int32">5</d:id>')
        ->see('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->see('<d:id m:type="Edm.Int32">6</d:id>')
        ->see('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->see('<d:id m:type="Edm.Int32">12</d:id>')
        ->see('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests String Functions substringof
    public function testfiltersubstringofGood()
    {

        $this->visit('odata.svc/customer?$filter=substringof(%27Bilbo%27,name)')
        ->see('odata.svc/customer(id=1)</id>')
        ->see('<title type="text">customer</title>')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('xml:base="')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests String Functions endswith and Logical Operators Eq/Equal
     public function testfilterendswithEQGood()
    {

        $this->visit('odata.svc/customer?$filter=endswith(name,%20%27Baggins%27)%20eq%20true')
        ->see('<title type="text">customer</title>')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('xml:base="')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests String Functions startswith and Logical Operators Eq/Equal
     public function testfilterstartsswithEQGood()
    {

        $this->visit('odata.svc/customer?$filter=startswith(name,%20%27Bilbo%27)%20eq%20true')
        ->see('odata.svc/customer(id=1)</id>')
        ->see('<title type="text">customer</title>')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('xml:base="')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests String Functions length and Logical Operators Eq/Equal
     public function testfilterlengthEQGood()
    {

        $this->visit('odata.svc/customer?$filter=length(name)%20eq%2010')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	    // tests String Functions indexof and Logical Operators Eq/Equal
     public function testfilterindexofEQGood()
    {

        $this->visit('odata.svc/customer?$filter=indexof(name,%20%27elis%27)%20eq%201')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests String Functions replace and Logical Operators Eq/Equal
     public function testfilterreplaceEQGood()
    {

        $this->visit('odata.svc/customer?$filter=replace(name,%20%27The%20%27,%20%27%27)%20eq%20%27doctor%27')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	    // tests String Functions substring with 2 paramaters and Logical Operators Eq/Equal
     public function testfiltersubstringEQGood()
    {

        $this->visit('odata.svc/customer?$filter=substring(name,%207)%20eq%20%27aggins%27')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	    // tests String Functions substring with 3 paramaters and Logical Operators Eq/Equal
     public function testfiltersubstringEQGood2()
    {

        $this->visit('odata.svc/customer?$filter=substring(name,%207,2)%20eq%20%27ag%27')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
   // tests String Functions tolower and Logical Operators Eq/Equal
     public function testfiltertolowerEQGood()
    {

        $this->visit('odata.svc/customer?$filter=tolower(name)%20eq%20%27gimli%27')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
   // tests String Functions toupper and Logical Operators Eq/Equal
     public function testfiltertoupperEQGood()
    {

        $this->visit('odata.svc/customer?$filter=toupper(name)%20eq%20%27GIMLI%27')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	   // tests String Functions trim and Logical Operators Eq/Equal
     public function testfiltertrimEQGood()
    {

        $this->visit('odata.svc/customer?$filter=name%20eq%20trim(%20%20%20%20%20%20%20%20%27Gimli%27)')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	   // tests String Functions concat and Logical Operators Eq/Equal
     public function testfilterconcatEQGood()
    {

        $this->visit('odata.svc/customer?$filter=concat(name,%27%20the%20great%27)%20eq%20%27Gimli%20the%20great%27')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests logcal operator ge/Greater than or equal	
     public function testfilterGEGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20ge%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->see('<d:id m:type="Edm.Int32">5</d:id>')
        ->see('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->see('<d:id m:type="Edm.Int32">6</d:id>')
        ->see('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->see('<d:id m:type="Edm.Int32">12</d:id>')
        ->see('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests logcal operator ge/Greater than
     public function testfilterGTGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20gt%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->see('<d:id m:type="Edm.Int32">6</d:id>')
        ->see('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->see('<d:id m:type="Edm.Int32">12</d:id>')
        ->see('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests logcal operator lt/Less than
     public function testfilterLTGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20lt%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->see('<d:id m:type="Edm.Int32">2</d:id>')
        ->see('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	    // tests logcal operator le/Less than or Equal
     public function testfilterLEGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20le%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->see('<d:id m:type="Edm.Int32">2</d:id>')
        ->see('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->see('<d:id m:type="Edm.Int32">5</d:id>')
        ->see('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	    // tests logcal operator (le/Less than or Equal),(gt/Greater than), (and/Logical and)
     public function testfilterLEandGTGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20le%208%20and%20id%20gt%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->see('<d:id m:type="Edm.Int32">6</d:id>')
        ->see('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests logcal operator (ge/Greater than or Equal),(lt/Less than), (or/Logical or)
     public function testfilterGEorLTGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20ge%208%20or%20id%20lt%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->see('<d:id m:type="Edm.Int32">2</d:id>')
        ->see('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->see('<d:id m:type="Edm.Int32">8</d:id>')
        ->see('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->see('<d:id m:type="Edm.Int32">12</d:id>')
        ->see('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
    // tests logcal operator (ge/Greater than or Equal),(lt/Less than), (or/Logical or), (not/Logical negation)

     public function testfilternotGEorLTGood()
    {

        $this->visit('odata.svc/customer?$filter=not (id%20ge%208%20or%20id%20lt%205)')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->see('<d:id m:type="Edm.Int32">5</d:id>')
        ->see('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->see('<d:id m:type="Edm.Int32">6</d:id>')
        ->see('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	    // tests logcal operator (le/Less than or Equal),(gt/Greater than), (and/Logical and), (not/Logical negation)

	 public function testfilternotLEandGTGood()
    {

        $this->visit('odata.svc/customer?$filter=not (id%20le%208%20and%20id%20gt%205)')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->see('<d:id m:type="Edm.Int32">2</d:id>')
        ->see('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->see('<d:id m:type="Edm.Int32">4</d:id>')
        ->see('<d:name m:type="Edm.String">Gimli</d:name>')
        ->see('<d:id m:type="Edm.Int32">5</d:id>')
        ->see('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->see('<d:id m:type="Edm.Int32">12</d:id>')
        ->see('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }

    // tests Arithmetic Operators add and Logical operator EQ/Equals
	 public function testfilterAddEQGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20add%202%20eq%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	// tests Arithmetic Operators sub and Logical operator EQ/Equals
	 public function testfilterSubEQGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20sub%202%20eq%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }

	// tests Arithmetic Operators mul and Logical operator EQ/Equals
	 public function testfilterMulEQGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20mul%202%20eq%206')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }

	// tests Arithmetic Operators div and Logical operator EQ/Equals
	 public function testfilterDivEQGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20div%202%20eq%206')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->see('<d:id m:type="Edm.Int32">12</d:id>')
        ->see('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }

		// tests Arithmetic Operators Mod and Logical operator EQ/Equals
	 public function testfilterModEQGood()
    {

        $this->visit('odata.svc/customer?$filter=id%20mod%202%20eq%201')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->see('<d:id m:type="Edm.Int32">1</d:id>')
        ->see('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->see('<d:id m:type="Edm.Int32">3</d:id>')
        ->see('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->see('<d:id m:type="Edm.Int32">5</d:id>')
        ->see('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->see('<d:id m:type="Edm.Int32">7</d:id>')
        ->see('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">10</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }

// tests Arithmetic Operators div, Math Functions round and Logical operator EQ/Equals
	 public function testfilterRoundDivEQGood()
    {

        $this->visit('odata.svc/customer?$filter=round(id%20div%202)%20eq%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	// tests Arithmetic Operators div, Math Functions round and Logical operator EQ/Equals
	 public function testfilterFloorDivEQGood()
    {

        $this->visit('odata.svc/customer?$filter=floor(id%20div%202)%20eq%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">9</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->see('<d:id m:type="Edm.Int32">11</d:id>')
        ->see('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
	// tests Arithmetic Operators div, Math Functions ceiling and Logical operator EQ/Equals
	 public function testfilterCeilingDivEQGood()
    {

        $this->visit('odata.svc/customer?$filter=ceiling(id%20div%202)%20eq%205')
        ->see('<title type="text">customer</title>')
        ->see('xml:base="')
        ->dontSee('<d:id m:type="Edm.Int32">1</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Bilbo Baggins</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">2</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Óin</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">3</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Azaghâl</d:name')
        ->dontSee('<d:id m:type="Edm.Int32">4</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Gimli</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">5</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Catelyn Stark</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">6</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Ygritte</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">7</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Melisandre</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">8</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Doctor</d:name>')
        ->see('<d:id m:type="Edm.Int32">9</d:id>')
        ->see('<d:name m:type="Edm.String">Susan Foreman</d:name>')
        ->see('<d:id m:type="Edm.Int32">10</d:id>')
        ->see('<d:name m:type="Edm.String">Death</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">11</d:id>')
        ->dontSee('<d:name m:type="Edm.String">The Hogfather</d:name>')
        ->dontSee('<d:id m:type="Edm.Int32">12</d:id>')
        ->dontSee('<d:name m:type="Edm.String">Moist von Lipwig</d:name>')
        ->dontSee("Whoops");
    }
}

